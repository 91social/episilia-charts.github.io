apiVersion: v1
kind: ConfigMap
metadata:
  name: episilia-config
data:
  alert.rules.file.url: {{ .Values.global.alert.rules.file.url | quote }}
  client.env: {{ .Values.global.client.env | quote }}
  client.id: {{ .Values.global.client.id | quote }}
  client.license.key: {{ .Values.global.client.license.key | quote }}
  datastore.stores.cache.enabled: "false"
  datastore.stores.stage.s3.accesskey: {{ .Values.global.datastore.s3.accesskey | quote }}
  datastore.stores.stage.s3.secretkey: {{ .Values.global.datastore.s3.secretkey | quote }}
  datastore.stores.stage.s3.endpoint.url: {{ .Values.global.datastore.s3.endpoint.url | quote }}
  datastore.stores.stage.s3.region: {{ .Values.global.datastore.s3.region | quote }}
  datastore.stores.stage.s3.bucket: {{ .Values.global.datastore.s3.bucket | quote }}
  datastore.stores.stage.s3.folder: {{ .Values.global.datastore.s3.folder | quote }}
  datastore.stores.stage.s3.sign.payload: {{ .Values.global.datastore.s3.sign.payload | quote }}
  datastore.stores.stage.s3.work.folder: {{ .Values.global.datastore.s3.work.folder | quote }}
  datastore.stores.stage.s3.useArn: {{ .Values.global.datastore.s3.useArn | quote }}
  datastore.stores.stage.s3.assumeRole: {{ .Values.global.datastore.s3.assumeRole | quote }}
  datastore.stores.final.s3.accesskey: {{ .Values.global.datastore.s3.accesskey | quote }}
  datastore.stores.final.s3.secretkey: {{ .Values.global.datastore.s3.secretkey | quote }}
  datastore.stores.final.s3.endpoint.url: {{ .Values.global.datastore.s3.endpoint.url | quote }}
  datastore.stores.final.s3.region: {{ .Values.global.datastore.s3.region | quote }}
  datastore.stores.final.s3.bucket: {{ .Values.global.datastore.s3.bucket | quote }}
  datastore.stores.final.s3.folder: {{ .Values.global.datastore.s3.folder | quote }}
  datastore.stores.final.s3.sign.payload: {{ .Values.global.datastore.s3.sign.payload | quote }}
  datastore.stores.final.s3.work.folder: {{ .Values.global.datastore.s3.work.folder | quote }}
  datastore.stores.final.s3.useArn: {{ .Values.global.datastore.s3.useArn | quote }}
  datastore.stores.final.s3.assumeRole: {{ .Values.global.datastore.s3.assumeRole | quote }}
  indexer.ops.alert.enable: {{ .Values.global.indexer.ops.alert.enable | quote }}
  indexer.ops.tail.enable: {{ .Values.global.indexer.ops.tail.enable | quote }}
  indexer.schema.appid.fixed: {{ .Values.global.indexer.schema.appid.fixed | quote }}
  indexer.schema.appid.keys: {{ .Values.global.indexer.schema.appid.keys | quote }}
  indexer.schema.tenantid.fixed: {{ .Values.global.indexer.schema.tenantid.fixed | quote }}
  indexer.schema.tenantid.keys: {{ .Values.global.indexer.schema.tenantid.keys | quote }}
  indexer.schema.exclude: {{ .Values.global.indexer.schema.exclude | quote }}
  indexer.schema.message.key: {{ .Values.global.indexer.schema.message.key | quote }}
  indexer.schema.timestamp.formats: {{ .Values.global.indexer.schema.timestamp.formats | quote }}
  indexer.schema.timestamp.key: {{ .Values.global.indexer.schema.timestamp.key | quote }}
  kafka.group.spike: {{ .Values.global.kafka.group.spike | quote }}
  kafka.group.search: {{ .Values.global.kafka.group.search | quote }}
  kafka.indexer.group: {{ .Values.global.kafka.indexer.group | quote }}
  kafka.group.logwatcher: {{ .Values.global.kafka.group.logwatcher | quote }}
  kafka.group.logwatcher.alert: {{ .Values.global.kafka.group.logwatcher.alert | quote }}
  kafka.group.logwatcher.tail: {{ .Values.global.kafka.group.logwatcher.tail | quote }}
  kafka.indexer.logs.topics: {{ .Values.global.kafka.indexer.logs.topics | quote }}
  kafka.indexer.broker.list: {{ .Values.global.kafka.indexer.broker.list | quote }}
  kafka.indexer.broker.security.mode: {{ .Values.global.kafka.indexer.broker.security.mode | quote }}
  kafka.indexer.broker.security.protocol: {{ .Values.global.kafka.indexer.broker.security.protocol | quote }}
  kafka.indexer.broker.sasl.mechanism: {{ .Values.global.kafka.indexer.broker.sasl.mechanism | quote }}
  kafka.indexer.broker.sasl.username: {{ .Values.global.kafka.indexer.broker.sasl.username | quote }}
  kafka.indexer.broker.sasl.password: {{ .Values.global.kafka.indexer.broker.sasl.password | quote }}
  kafka.internal.broker.list: {{ .Values.global.kafka.internal.broker.list | quote }}
  kafka.topic.alert.response.out: {{ .Values.global.kafka.topic.alert.response.out | quote }}
  kafka.topic.tail.request.in: {{ .Values.global.kafka.topic.tail.request.in | quote }}
  kafka.topic.tail.response.out: {{ .Values.global.kafka.topic.tail.response.out | quote }}
  kafka.topic.index.live: {{ .Values.global.kafka.topic.index.live | quote }}
  kafka.topic.index.optimized: {{ .Values.global.kafka.topic.index.optimized | quote }}
  kafka.topic.optimize.request: {{ .Values.global.kafka.topic.optimize.request | quote }}
  search.api.timeout.seconds: {{ .Values.global.search.api.timeout.seconds | quote }}
  search.live.from.hours: {{ .Values.global.search.live.from.hours | quote }}
  search.live.to.hours: {{ .Values.global.search.live.to.hours | quote }}
  search.fixed.from.yyyymmddhh: {{.Values.global.fixedSearch.fixed.from.yyyymmddhh | quote }}
  search.fixed.to.yyyymmddhh: {{.Values.global.fixedSearch.fixed.to.yyyymmddhh | quote }}
  #gateway.api.http.port: {{ .Values.httpport | quote }}
  #gateway.search.timeout.seconds: {{ .Values.timeout | quote }}
  #gateway.search.url: {{ .Values.gatewayurl | quote }}
  ops.log.debug: {{ .Values.debug | quote }}
  search.api.grpc.port: {{ .Values.grpcport | quote }}
  search.api.response.max.mb: {{ .Values.maxmb | quote }}
  ops.license.url: {{ .Values.licenseurl | quote }}
  client.tenant.id: {{ .Values.tenantid | quote }}
  spike.api.grpc.port: {{ .Values.spikeport | quote }}
  #ops.work.dir: {{ .Values.workdir | quote }}
  search.host: {{ .Values.searchhost | quote }}
  pulse.host: {{ .Values.pulsehost | quote }}
  pulse.port: {{ .Values.pulseport | quote }}
  search.labels.exclude: "time"
  gateway.api.http.port: "9002"
  gateway.search.timeout.seconds: "120"
  gateway.search.url: "episilia-search:4040"
  ops.log.debug: "on"
  search.api.grpc.port: "4040"
  search.api.response.max.mb: "100"
  ops.license.url: "episilia-spike:50051"
  client.tenant.id: {{ .Values.global.client.tenant.id | quote }}
  spike.api.grpc.port: "50051"
  ops.work.dir: "/data"
  search.host: "episilia-search:4040"
  pulse.host: "dev-api-pulse.episilia.net"
  pulse.port: "50051"
  search.labels.exclude: "@timestamp,log"
  search.ops.index.cache.resetonstart: "true"
